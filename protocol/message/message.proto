package protocol;

enum BetType {
  CHECK = 0;
  CALL = 1;
  FOLD = 2;
  RAISE = 3;
}

enum DealType {
  BOARD = 0;
  HOLE = 1;
  DOOR = 2;
  DISCARD = 3;
}

enum GameType {
  TEXAS = 0;
  OMAHA = 1;
  OMAHA8 = 2;
  STUD = 3;
  STUD8 = 4;
  RAZZ = 9;
  LONDON = 10;
  FIVECARD = 11;
  SINGLE27 = 12;
  TRIPLE27 = 13;
  BADUGI = 14;
}

enum GameLimit {
  NO_LIMIT = 0;
  POT_LIMIT = 1;
  FIXED_LIMIT = 2;
}

enum Rank {
  StraightFlush = 0;
  FourKind = 1;
  FullHouse = 2;
  Flush = 3;
  Straight = 4;
  ThreeKind = 5;
  TwoPair = 6;
  OnePair = 7;
  HighCard = 8;

  BadugiFour = 9;
  BadugiThree = 10;
  BadugiTwo = 11;
  BadugiOne = 12;

  CompleteLow = 13;
  IncompleteLow = 14;
}

message ErrorMessage {
  required string Message = 1;
}

message ChatMessage {
  required int32 pos = 1;
  required string Message = 2;
}

message DealerMessage {
  required string Message = 1;
}

message BetRange {
  required float Call = 1;
  required float Min = 2;
  required float Max = 3;
}

message RequireBet {
  required int32 pos = 1;
  required BetRange BetRange = 2;
}

message Bet {
  required BetType Type = 1;
  optional float Amount = 2;
}

message AddBet {
  required int32 pos = 1;
  required Bet Bet = 2;
}

message BettingComplete {
  required float Pot = 1;
  required float Rake = 2;
}
message DealCards {
  required int32 Pos = 1;
  repeated int64 Cards = 2;
  required DealType Type = 3;
}

message RequireDiscard {
  required int32 Pos = 1;
}

message Discarded {
  required int32 Pos = 1;
  required int32 Num = 2;
}

message DiscardCards {
  required int32 Pos = 1;
  repeated int32 Cards = 2;
}

message PlayStart {
}

message StreetStart {
  required string Name = 1;
}

message ChangeGame {
  required GameType Type = 1;
  required GameLimit Limit = 2;
}

message Hand {
  required Rank Rank = 1;
  repeated int32 Value = 2;
  repeated int32 High = 3;
  repeated int32 Kicker = 4;
}

message ShowHand {
  required int32 Pos = 1;
  repeated int32 Cards = 2;
  required Hand Hand = 3;
  required string HandString = 4;
}

message ShowCards {
  required int32 Pos = 1;
  repeated int32 Cards = 2;
  required bool Muck = 3 [default = false];
}

message Winner {
  required int32 Pos = 1;
  required float Amount = 2;
}

message MoveButton {
  required int32 Pos = 1;
}

message JoinTable {
  required string Player = 1;
  required int32 Pos = 2;
  required float Amount = 3;
}

message LeaveTable {
  required string Player = 1;
}

message SitOut {
  required int32 Pos = 1;
}

message ComeBack {
  required int32 Pos = 1;
}

message Envelope {
}

/*
type SeatState struct {
  Pos int
}

type ChangeSeatState struct {
  Pos   int
  State seat.State
}

// seat info
type Seat struct {
  State string
  Stack float
  Bet   float
}
*/
