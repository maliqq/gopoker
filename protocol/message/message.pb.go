// Code generated by protoc-gen-go.
// source: protocol/message/message.proto
// DO NOT EDIT!

package message

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type ErrorMessage struct {
	Message          *string `protobuf:"bytes,1,req" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *ErrorMessage) Reset()         { *this = ErrorMessage{} }
func (this *ErrorMessage) String() string { return proto.CompactTextString(this) }
func (*ErrorMessage) ProtoMessage()       {}

func (this *ErrorMessage) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type ChatMessage struct {
	Pos              *int32  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Message          *string `protobuf:"bytes,2,req" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *ChatMessage) Reset()         { *this = ChatMessage{} }
func (this *ChatMessage) String() string { return proto.CompactTextString(this) }
func (*ChatMessage) ProtoMessage()       {}

func (this *ChatMessage) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *ChatMessage) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type DealerMessage struct {
	Message          *string `protobuf:"bytes,1,req" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *DealerMessage) Reset()         { *this = DealerMessage{} }
func (this *DealerMessage) String() string { return proto.CompactTextString(this) }
func (*DealerMessage) ProtoMessage()       {}

func (this *DealerMessage) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type Envelope struct {
	ErrorMessage     *ErrorMessage    `protobuf:"bytes,1,opt" json:"ErrorMessage,omitempty"`
	ChatMessage      *ChatMessage     `protobuf:"bytes,2,opt" json:"ChatMessage,omitempty"`
	DealerMessage    *DealerMessage   `protobuf:"bytes,3,opt" json:"DealerMessage,omitempty"`
	PlayStart        *PlayStart       `protobuf:"bytes,4,opt" json:"PlayStart,omitempty"`
	StreetStart      *StreetStart     `protobuf:"bytes,5,opt" json:"StreetStart,omitempty"`
	ChangeGame       *ChangeGame      `protobuf:"bytes,6,opt" json:"ChangeGame,omitempty"`
	BettingComplete  *BettingComplete `protobuf:"bytes,7,opt" json:"BettingComplete,omitempty"`
	JoinTable        *JoinTable       `protobuf:"bytes,8,opt" json:"JoinTable,omitempty"`
	LeaveTable       *LeaveTable      `protobuf:"bytes,9,opt" json:"LeaveTable,omitempty"`
	SitOut           *SitOut          `protobuf:"bytes,10,opt" json:"SitOut,omitempty"`
	ComeBack         *ComeBack        `protobuf:"bytes,11,opt" json:"ComeBack,omitempty"`
	MoveButton       *MoveButton      `protobuf:"bytes,12,opt" json:"MoveButton,omitempty"`
	RequireBet       *RequireBet      `protobuf:"bytes,13,opt" json:"RequireBet,omitempty"`
	AddBet           *AddBet          `protobuf:"bytes,14,opt" json:"AddBet,omitempty"`
	DealCards        *DealCards       `protobuf:"bytes,15,opt" json:"DealCards,omitempty"`
	RequireDiscard   *RequireDiscard  `protobuf:"bytes,16,opt" json:"RequireDiscard,omitempty"`
	Discarded        *Discarded       `protobuf:"bytes,17,opt" json:"Discarded,omitempty"`
	DiscardCards     *DiscardCards    `protobuf:"bytes,18,opt" json:"DiscardCards,omitempty"`
	ShowHand         *ShowHand        `protobuf:"bytes,19,opt" json:"ShowHand,omitempty"`
	ShowCards        *ShowCards       `protobuf:"bytes,20,opt" json:"ShowCards,omitempty"`
	Winner           *Winner          `protobuf:"bytes,21,opt" json:"Winner,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (this *Envelope) Reset()         { *this = Envelope{} }
func (this *Envelope) String() string { return proto.CompactTextString(this) }
func (*Envelope) ProtoMessage()       {}

func (this *Envelope) GetErrorMessage() *ErrorMessage {
	if this != nil {
		return this.ErrorMessage
	}
	return nil
}

func (this *Envelope) GetChatMessage() *ChatMessage {
	if this != nil {
		return this.ChatMessage
	}
	return nil
}

func (this *Envelope) GetDealerMessage() *DealerMessage {
	if this != nil {
		return this.DealerMessage
	}
	return nil
}

func (this *Envelope) GetPlayStart() *PlayStart {
	if this != nil {
		return this.PlayStart
	}
	return nil
}

func (this *Envelope) GetStreetStart() *StreetStart {
	if this != nil {
		return this.StreetStart
	}
	return nil
}

func (this *Envelope) GetChangeGame() *ChangeGame {
	if this != nil {
		return this.ChangeGame
	}
	return nil
}

func (this *Envelope) GetBettingComplete() *BettingComplete {
	if this != nil {
		return this.BettingComplete
	}
	return nil
}

func (this *Envelope) GetJoinTable() *JoinTable {
	if this != nil {
		return this.JoinTable
	}
	return nil
}

func (this *Envelope) GetLeaveTable() *LeaveTable {
	if this != nil {
		return this.LeaveTable
	}
	return nil
}

func (this *Envelope) GetSitOut() *SitOut {
	if this != nil {
		return this.SitOut
	}
	return nil
}

func (this *Envelope) GetComeBack() *ComeBack {
	if this != nil {
		return this.ComeBack
	}
	return nil
}

func (this *Envelope) GetMoveButton() *MoveButton {
	if this != nil {
		return this.MoveButton
	}
	return nil
}

func (this *Envelope) GetRequireBet() *RequireBet {
	if this != nil {
		return this.RequireBet
	}
	return nil
}

func (this *Envelope) GetAddBet() *AddBet {
	if this != nil {
		return this.AddBet
	}
	return nil
}

func (this *Envelope) GetDealCards() *DealCards {
	if this != nil {
		return this.DealCards
	}
	return nil
}

func (this *Envelope) GetRequireDiscard() *RequireDiscard {
	if this != nil {
		return this.RequireDiscard
	}
	return nil
}

func (this *Envelope) GetDiscarded() *Discarded {
	if this != nil {
		return this.Discarded
	}
	return nil
}

func (this *Envelope) GetDiscardCards() *DiscardCards {
	if this != nil {
		return this.DiscardCards
	}
	return nil
}

func (this *Envelope) GetShowHand() *ShowHand {
	if this != nil {
		return this.ShowHand
	}
	return nil
}

func (this *Envelope) GetShowCards() *ShowCards {
	if this != nil {
		return this.ShowCards
	}
	return nil
}

func (this *Envelope) GetWinner() *Winner {
	if this != nil {
		return this.Winner
	}
	return nil
}

type Message struct {
	Type             *string   `protobuf:"bytes,1,req" json:"Type,omitempty"`
	Timestamp        *int64    `protobuf:"varint,2,req" json:"Timestamp,omitempty"`
	Envelope         *Envelope `protobuf:"bytes,4,req" json:"Envelope,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *Message) Reset()         { *this = Message{} }
func (this *Message) String() string { return proto.CompactTextString(this) }
func (*Message) ProtoMessage()       {}

func (this *Message) GetType() string {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return ""
}

func (this *Message) GetTimestamp() int64 {
	if this != nil && this.Timestamp != nil {
		return *this.Timestamp
	}
	return 0
}

func (this *Message) GetEnvelope() *Envelope {
	if this != nil {
		return this.Envelope
	}
	return nil
}

func init() {
}
