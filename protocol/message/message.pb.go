// Code generated by protoc-gen-go.
// source: protocol/message/message.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type BetType int32

const (
	BetType_CHECK BetType = 0
	BetType_CALL  BetType = 1
	BetType_FOLD  BetType = 2
	BetType_RAISE BetType = 3
)

var BetType_name = map[int32]string{
	0: "CHECK",
	1: "CALL",
	2: "FOLD",
	3: "RAISE",
}
var BetType_value = map[string]int32{
	"CHECK": 0,
	"CALL":  1,
	"FOLD":  2,
	"RAISE": 3,
}

func (x BetType) Enum() *BetType {
	p := new(BetType)
	*p = x
	return p
}
func (x BetType) String() string {
	return proto.EnumName(BetType_name, int32(x))
}
func (x BetType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *BetType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BetType_value, data, "BetType")
	if err != nil {
		return err
	}
	*x = BetType(value)
	return nil
}

type DealType int32

const (
	DealType_BOARD   DealType = 0
	DealType_HOLE    DealType = 1
	DealType_DOOR    DealType = 2
	DealType_DISCARD DealType = 3
)

var DealType_name = map[int32]string{
	0: "BOARD",
	1: "HOLE",
	2: "DOOR",
	3: "DISCARD",
}
var DealType_value = map[string]int32{
	"BOARD":   0,
	"HOLE":    1,
	"DOOR":    2,
	"DISCARD": 3,
}

func (x DealType) Enum() *DealType {
	p := new(DealType)
	*p = x
	return p
}
func (x DealType) String() string {
	return proto.EnumName(DealType_name, int32(x))
}
func (x DealType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *DealType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DealType_value, data, "DealType")
	if err != nil {
		return err
	}
	*x = DealType(value)
	return nil
}

type GameType int32

const (
	GameType_TEXAS    GameType = 0
	GameType_OMAHA    GameType = 1
	GameType_OMAHA8   GameType = 2
	GameType_STUD     GameType = 3
	GameType_STUD8    GameType = 4
	GameType_RAZZ     GameType = 9
	GameType_LONDON   GameType = 10
	GameType_FIVECARD GameType = 11
	GameType_SINGLE27 GameType = 12
	GameType_TRIPLE27 GameType = 13
	GameType_BADUGI   GameType = 14
)

var GameType_name = map[int32]string{
	0:  "TEXAS",
	1:  "OMAHA",
	2:  "OMAHA8",
	3:  "STUD",
	4:  "STUD8",
	9:  "RAZZ",
	10: "LONDON",
	11: "FIVECARD",
	12: "SINGLE27",
	13: "TRIPLE27",
	14: "BADUGI",
}
var GameType_value = map[string]int32{
	"TEXAS":    0,
	"OMAHA":    1,
	"OMAHA8":   2,
	"STUD":     3,
	"STUD8":    4,
	"RAZZ":     9,
	"LONDON":   10,
	"FIVECARD": 11,
	"SINGLE27": 12,
	"TRIPLE27": 13,
	"BADUGI":   14,
}

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}
func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}
func (x GameType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *GameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameType_value, data, "GameType")
	if err != nil {
		return err
	}
	*x = GameType(value)
	return nil
}

type GameLimit int32

const (
	GameLimit_NO_LIMIT    GameLimit = 0
	GameLimit_POT_LIMIT   GameLimit = 1
	GameLimit_FIXED_LIMIT GameLimit = 2
)

var GameLimit_name = map[int32]string{
	0: "NO_LIMIT",
	1: "POT_LIMIT",
	2: "FIXED_LIMIT",
}
var GameLimit_value = map[string]int32{
	"NO_LIMIT":    0,
	"POT_LIMIT":   1,
	"FIXED_LIMIT": 2,
}

func (x GameLimit) Enum() *GameLimit {
	p := new(GameLimit)
	*p = x
	return p
}
func (x GameLimit) String() string {
	return proto.EnumName(GameLimit_name, int32(x))
}
func (x GameLimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *GameLimit) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameLimit_value, data, "GameLimit")
	if err != nil {
		return err
	}
	*x = GameLimit(value)
	return nil
}

type ErrorMessage struct {
	Message          *string `protobuf:"bytes,1,req" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *ErrorMessage) Reset()         { *this = ErrorMessage{} }
func (this *ErrorMessage) String() string { return proto.CompactTextString(this) }
func (*ErrorMessage) ProtoMessage()       {}

func (this *ErrorMessage) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type ChatMessage struct {
	Pos              *int32  `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Message          *string `protobuf:"bytes,2,req" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *ChatMessage) Reset()         { *this = ChatMessage{} }
func (this *ChatMessage) String() string { return proto.CompactTextString(this) }
func (*ChatMessage) ProtoMessage()       {}

func (this *ChatMessage) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *ChatMessage) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type DealerMessage struct {
	Message          *string `protobuf:"bytes,1,req" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *DealerMessage) Reset()         { *this = DealerMessage{} }
func (this *DealerMessage) String() string { return proto.CompactTextString(this) }
func (*DealerMessage) ProtoMessage()       {}

func (this *DealerMessage) GetMessage() string {
	if this != nil && this.Message != nil {
		return *this.Message
	}
	return ""
}

type BetRange struct {
	Call             *float32 `protobuf:"fixed32,1,req" json:"Call,omitempty"`
	Min              *float32 `protobuf:"fixed32,2,req" json:"Min,omitempty"`
	Max              *float32 `protobuf:"fixed32,3,req" json:"Max,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *BetRange) Reset()         { *this = BetRange{} }
func (this *BetRange) String() string { return proto.CompactTextString(this) }
func (*BetRange) ProtoMessage()       {}

func (this *BetRange) GetCall() float32 {
	if this != nil && this.Call != nil {
		return *this.Call
	}
	return 0
}

func (this *BetRange) GetMin() float32 {
	if this != nil && this.Min != nil {
		return *this.Min
	}
	return 0
}

func (this *BetRange) GetMax() float32 {
	if this != nil && this.Max != nil {
		return *this.Max
	}
	return 0
}

type RequireBet struct {
	Pos              *int32    `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	BetRange         *BetRange `protobuf:"bytes,2,req" json:"BetRange,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *RequireBet) Reset()         { *this = RequireBet{} }
func (this *RequireBet) String() string { return proto.CompactTextString(this) }
func (*RequireBet) ProtoMessage()       {}

func (this *RequireBet) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *RequireBet) GetBetRange() *BetRange {
	if this != nil {
		return this.BetRange
	}
	return nil
}

type Bet struct {
	Type             *BetType `protobuf:"varint,1,req,enum=protocol.BetType" json:"Type,omitempty"`
	Amount           *float32 `protobuf:"fixed32,2,opt" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *Bet) Reset()         { *this = Bet{} }
func (this *Bet) String() string { return proto.CompactTextString(this) }
func (*Bet) ProtoMessage()       {}

func (this *Bet) GetType() BetType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *Bet) GetAmount() float32 {
	if this != nil && this.Amount != nil {
		return *this.Amount
	}
	return 0
}

type AddBet struct {
	Pos              *int32 `protobuf:"varint,1,req,name=pos" json:"pos,omitempty"`
	Bet              *Bet   `protobuf:"bytes,2,req" json:"Bet,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *AddBet) Reset()         { *this = AddBet{} }
func (this *AddBet) String() string { return proto.CompactTextString(this) }
func (*AddBet) ProtoMessage()       {}

func (this *AddBet) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *AddBet) GetBet() *Bet {
	if this != nil {
		return this.Bet
	}
	return nil
}

type BettingComplete struct {
	Pot              *float32 `protobuf:"fixed32,1,req" json:"Pot,omitempty"`
	Rake             *float32 `protobuf:"fixed32,2,req" json:"Rake,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *BettingComplete) Reset()         { *this = BettingComplete{} }
func (this *BettingComplete) String() string { return proto.CompactTextString(this) }
func (*BettingComplete) ProtoMessage()       {}

func (this *BettingComplete) GetPot() float32 {
	if this != nil && this.Pot != nil {
		return *this.Pot
	}
	return 0
}

func (this *BettingComplete) GetRake() float32 {
	if this != nil && this.Rake != nil {
		return *this.Rake
	}
	return 0
}

type DealCards struct {
	Pos              *int32    `protobuf:"varint,1,req" json:"Pos,omitempty"`
	Cards            []int64   `protobuf:"varint,2,rep" json:"Cards,omitempty"`
	Type             *DealType `protobuf:"varint,3,req,enum=protocol.DealType" json:"Type,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (this *DealCards) Reset()         { *this = DealCards{} }
func (this *DealCards) String() string { return proto.CompactTextString(this) }
func (*DealCards) ProtoMessage()       {}

func (this *DealCards) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *DealCards) GetCards() []int64 {
	if this != nil {
		return this.Cards
	}
	return nil
}

func (this *DealCards) GetType() DealType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

type RequireDiscard struct {
	Pos              *int32 `protobuf:"varint,1,req" json:"Pos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *RequireDiscard) Reset()         { *this = RequireDiscard{} }
func (this *RequireDiscard) String() string { return proto.CompactTextString(this) }
func (*RequireDiscard) ProtoMessage()       {}

func (this *RequireDiscard) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

type Discarded struct {
	Pos              *int32 `protobuf:"varint,1,req" json:"Pos,omitempty"`
	Num              *int32 `protobuf:"varint,2,req" json:"Num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *Discarded) Reset()         { *this = Discarded{} }
func (this *Discarded) String() string { return proto.CompactTextString(this) }
func (*Discarded) ProtoMessage()       {}

func (this *Discarded) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *Discarded) GetNum() int32 {
	if this != nil && this.Num != nil {
		return *this.Num
	}
	return 0
}

type DiscardCards struct {
	Pos              *int32  `protobuf:"varint,1,req" json:"Pos,omitempty"`
	Cards            []int32 `protobuf:"varint,2,rep" json:"Cards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *DiscardCards) Reset()         { *this = DiscardCards{} }
func (this *DiscardCards) String() string { return proto.CompactTextString(this) }
func (*DiscardCards) ProtoMessage()       {}

func (this *DiscardCards) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *DiscardCards) GetCards() []int32 {
	if this != nil {
		return this.Cards
	}
	return nil
}

type PlayStart struct {
	XXX_unrecognized []byte `json:"-"`
}

func (this *PlayStart) Reset()         { *this = PlayStart{} }
func (this *PlayStart) String() string { return proto.CompactTextString(this) }
func (*PlayStart) ProtoMessage()       {}

type StreetStart struct {
	Name             *string `protobuf:"bytes,1,req" json:"Name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *StreetStart) Reset()         { *this = StreetStart{} }
func (this *StreetStart) String() string { return proto.CompactTextString(this) }
func (*StreetStart) ProtoMessage()       {}

func (this *StreetStart) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

type ChangeGame struct {
	Type             *GameType  `protobuf:"varint,1,req,enum=protocol.GameType" json:"Type,omitempty"`
	Limit            *GameLimit `protobuf:"varint,2,req,enum=protocol.GameLimit" json:"Limit,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (this *ChangeGame) Reset()         { *this = ChangeGame{} }
func (this *ChangeGame) String() string { return proto.CompactTextString(this) }
func (*ChangeGame) ProtoMessage()       {}

func (this *ChangeGame) GetType() GameType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *ChangeGame) GetLimit() GameLimit {
	if this != nil && this.Limit != nil {
		return *this.Limit
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.BetType", BetType_name, BetType_value)
	proto.RegisterEnum("protocol.DealType", DealType_name, DealType_value)
	proto.RegisterEnum("protocol.GameType", GameType_name, GameType_value)
	proto.RegisterEnum("protocol.GameLimit", GameLimit_name, GameLimit_value)
}
