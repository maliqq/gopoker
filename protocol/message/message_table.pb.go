// Code generated by protoc-gen-go.
// source: protocol/message/message_table.proto
// DO NOT EDIT!

package message

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type SeatState int32

const (
	SeatState_Empty  SeatState = 0
	SeatState_Taken  SeatState = 1
	SeatState_Ready  SeatState = 2
	SeatState_WaitBB SeatState = 3
	SeatState_PostBB SeatState = 4
	SeatState_Play   SeatState = 5
	SeatState_PutBet SeatState = 6
	SeatState_AllIn  SeatState = 7
	SeatState_Folded SeatState = 8
	SeatState_Auto   SeatState = 9
	SeatState_Kicked SeatState = 10
	SeatState_Busted SeatState = 11
	SeatState_Away   SeatState = 12
	SeatState_Idle   SeatState = 13
)

var SeatState_name = map[int32]string{
	0:  "Empty",
	1:  "Taken",
	2:  "Ready",
	3:  "WaitBB",
	4:  "PostBB",
	5:  "Play",
	6:  "PutBet",
	7:  "AllIn",
	8:  "Folded",
	9:  "Auto",
	10: "Kicked",
	11: "Busted",
	12: "Away",
	13: "Idle",
}
var SeatState_value = map[string]int32{
	"Empty":  0,
	"Taken":  1,
	"Ready":  2,
	"WaitBB": 3,
	"PostBB": 4,
	"Play":   5,
	"PutBet": 6,
	"AllIn":  7,
	"Folded": 8,
	"Auto":   9,
	"Kicked": 10,
	"Busted": 11,
	"Away":   12,
	"Idle":   13,
}

func (x SeatState) Enum() *SeatState {
	p := new(SeatState)
	*p = x
	return p
}
func (x SeatState) String() string {
	return proto.EnumName(SeatState_name, int32(x))
}
func (x SeatState) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *SeatState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SeatState_value, data, "SeatState")
	if err != nil {
		return err
	}
	*x = SeatState(value)
	return nil
}

type MoveButton struct {
	Pos              *int32 `protobuf:"varint,1,req" json:"Pos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *MoveButton) Reset()         { *this = MoveButton{} }
func (this *MoveButton) String() string { return proto.CompactTextString(this) }
func (*MoveButton) ProtoMessage()       {}

func (this *MoveButton) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

type JoinTable struct {
	Player           *string  `protobuf:"bytes,1,req" json:"Player,omitempty"`
	Pos              *int32   `protobuf:"varint,2,req" json:"Pos,omitempty"`
	Amount           *float64 `protobuf:"fixed64,3,req" json:"Amount,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (this *JoinTable) Reset()         { *this = JoinTable{} }
func (this *JoinTable) String() string { return proto.CompactTextString(this) }
func (*JoinTable) ProtoMessage()       {}

func (this *JoinTable) GetPlayer() string {
	if this != nil && this.Player != nil {
		return *this.Player
	}
	return ""
}

func (this *JoinTable) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *JoinTable) GetAmount() float64 {
	if this != nil && this.Amount != nil {
		return *this.Amount
	}
	return 0
}

type LeaveTable struct {
	Player           *string `protobuf:"bytes,1,req" json:"Player,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *LeaveTable) Reset()         { *this = LeaveTable{} }
func (this *LeaveTable) String() string { return proto.CompactTextString(this) }
func (*LeaveTable) ProtoMessage()       {}

func (this *LeaveTable) GetPlayer() string {
	if this != nil && this.Player != nil {
		return *this.Player
	}
	return ""
}

type SitOut struct {
	Pos              *int32 `protobuf:"varint,1,req" json:"Pos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *SitOut) Reset()         { *this = SitOut{} }
func (this *SitOut) String() string { return proto.CompactTextString(this) }
func (*SitOut) ProtoMessage()       {}

func (this *SitOut) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

type ComeBack struct {
	Pos              *int32 `protobuf:"varint,1,req" json:"Pos,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (this *ComeBack) Reset()         { *this = ComeBack{} }
func (this *ComeBack) String() string { return proto.CompactTextString(this) }
func (*ComeBack) ProtoMessage()       {}

func (this *ComeBack) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

type Seat struct {
	Pos              *int32     `protobuf:"varint,1,req" json:"Pos,omitempty"`
	State            *SeatState `protobuf:"varint,2,opt,enum=message.SeatState" json:"State,omitempty"`
	Stack            *float64   `protobuf:"fixed64,3,opt" json:"Stack,omitempty"`
	Bet              *float64   `protobuf:"fixed64,4,opt" json:"Bet,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (this *Seat) Reset()         { *this = Seat{} }
func (this *Seat) String() string { return proto.CompactTextString(this) }
func (*Seat) ProtoMessage()       {}

func (this *Seat) GetPos() int32 {
	if this != nil && this.Pos != nil {
		return *this.Pos
	}
	return 0
}

func (this *Seat) GetState() SeatState {
	if this != nil && this.State != nil {
		return *this.State
	}
	return 0
}

func (this *Seat) GetStack() float64 {
	if this != nil && this.Stack != nil {
		return *this.Stack
	}
	return 0
}

func (this *Seat) GetBet() float64 {
	if this != nil && this.Bet != nil {
		return *this.Bet
	}
	return 0
}

type Table struct {
	Id               *string `protobuf:"bytes,1,req" json:"Id,omitempty"`
	Size             *int32  `protobuf:"varint,2,req" json:"Size,omitempty"`
	Button           *int32  `protobuf:"varint,3,req" json:"Button,omitempty"`
	Seats            []*Seat `protobuf:"bytes,4,rep" json:"Seats,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *Table) Reset()         { *this = Table{} }
func (this *Table) String() string { return proto.CompactTextString(this) }
func (*Table) ProtoMessage()       {}

func (this *Table) GetId() string {
	if this != nil && this.Id != nil {
		return *this.Id
	}
	return ""
}

func (this *Table) GetSize() int32 {
	if this != nil && this.Size != nil {
		return *this.Size
	}
	return 0
}

func (this *Table) GetButton() int32 {
	if this != nil && this.Button != nil {
		return *this.Button
	}
	return 0
}

func (this *Table) GetSeats() []*Seat {
	if this != nil {
		return this.Seats
	}
	return nil
}

func init() {
	proto.RegisterEnum("message.SeatState", SeatState_name, SeatState_value)
}
