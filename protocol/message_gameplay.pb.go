// Code generated by protoc-gen-go.
// source: protocol/message_gameplay.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type GameType int32

const (
	GameType_Texas    GameType = 0
	GameType_Omaha    GameType = 1
	GameType_Omaha8   GameType = 2
	GameType_Stud     GameType = 3
	GameType_Stud8    GameType = 4
	GameType_Razz     GameType = 9
	GameType_London   GameType = 10
	GameType_FiveCard GameType = 11
	GameType_Single27 GameType = 12
	GameType_Triple27 GameType = 13
	GameType_Badugi   GameType = 14
)

var GameType_name = map[int32]string{
	0:  "Texas",
	1:  "Omaha",
	2:  "Omaha8",
	3:  "Stud",
	4:  "Stud8",
	9:  "Razz",
	10: "London",
	11: "FiveCard",
	12: "Single27",
	13: "Triple27",
	14: "Badugi",
}
var GameType_value = map[string]int32{
	"Texas":    0,
	"Omaha":    1,
	"Omaha8":   2,
	"Stud":     3,
	"Stud8":    4,
	"Razz":     9,
	"London":   10,
	"FiveCard": 11,
	"Single27": 12,
	"Triple27": 13,
	"Badugi":   14,
}

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}
func (x GameType) String() string {
	return proto.EnumName(GameType_name, int32(x))
}
func (x GameType) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *GameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameType_value, data, "GameType")
	if err != nil {
		return err
	}
	*x = GameType(value)
	return nil
}

type GameLimit int32

const (
	GameLimit_NoLimit    GameLimit = 0
	GameLimit_PotLimit   GameLimit = 1
	GameLimit_FixedLimit GameLimit = 2
)

var GameLimit_name = map[int32]string{
	0: "NoLimit",
	1: "PotLimit",
	2: "FixedLimit",
}
var GameLimit_value = map[string]int32{
	"NoLimit":    0,
	"PotLimit":   1,
	"FixedLimit": 2,
}

func (x GameLimit) Enum() *GameLimit {
	p := new(GameLimit)
	*p = x
	return p
}
func (x GameLimit) String() string {
	return proto.EnumName(GameLimit_name, int32(x))
}
func (x GameLimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(x.String())
}
func (x *GameLimit) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GameLimit_value, data, "GameLimit")
	if err != nil {
		return err
	}
	*x = GameLimit(value)
	return nil
}

type PlayStart struct {
	XXX_unrecognized []byte `json:"-"`
}

func (this *PlayStart) Reset()         { *this = PlayStart{} }
func (this *PlayStart) String() string { return proto.CompactTextString(this) }
func (*PlayStart) ProtoMessage()       {}

type StreetStart struct {
	Name             *string `protobuf:"bytes,1,req" json:"Name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (this *StreetStart) Reset()         { *this = StreetStart{} }
func (this *StreetStart) String() string { return proto.CompactTextString(this) }
func (*StreetStart) ProtoMessage()       {}

func (this *StreetStart) GetName() string {
	if this != nil && this.Name != nil {
		return *this.Name
	}
	return ""
}

type ChangeGame struct {
	Type             *GameType  `protobuf:"varint,1,req,enum=protocol.GameType" json:"Type,omitempty"`
	Limit            *GameLimit `protobuf:"varint,2,req,enum=protocol.GameLimit" json:"Limit,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (this *ChangeGame) Reset()         { *this = ChangeGame{} }
func (this *ChangeGame) String() string { return proto.CompactTextString(this) }
func (*ChangeGame) ProtoMessage()       {}

func (this *ChangeGame) GetType() GameType {
	if this != nil && this.Type != nil {
		return *this.Type
	}
	return 0
}

func (this *ChangeGame) GetLimit() GameLimit {
	if this != nil && this.Limit != nil {
		return *this.Limit
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.GameType", GameType_name, GameType_value)
	proto.RegisterEnum("protocol.GameLimit", GameLimit_name, GameLimit_value)
}
